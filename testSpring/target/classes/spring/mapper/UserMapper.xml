<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 인터페이스명과 namespace를 동일하게 주어야 한다
	해당 인터페이스명: com.tis.user.mapper.UserMapper -->
<mapper namespace="com.tis.user.mapper.UserMapper">
	<!-- id는 UserMapper 인터페이스의 메소드명과 일치시켜야 한다 -->

	<!-- 페이징처리용 totalCount -->
	<select id="getTotalCount" resultType="int" >
		select count(idx) from member
	</select>
	<!-- 회원등록 -->
	<insert id="createUser" parameterType="User">
		<selectKey keyProperty="idx" order="BEFORE" resultType="int">
			select member_seq.nextval from dual
		</selectKey>
		insert into member values
		 (#{idx},#{name},#{userid},#{email:VARCHAR},#{pwd},#{hp1:VARCHAR},#{hp2:VARCHAR},#{hp3:VARCHAR}
		,#{post:VARCHAR},#{addr1:VARCHAR},#{addr2},sysdate,1000,0)
	</insert>
	
	<!-- 회원리스트 -->
	<select id="getAllUserListPaging" resultType="User" parameterType="com.tis.user.model.PagingVO">
		<!-- rownum 사용 -->
			<!-- select * from (select rownum rn, a.* from (select * from member order 
			by idx desc) a) where rn between #{start} and #{end} -->
			
		<!-- row_number() 사용 -->
		select * from (
		 select row_number() over (order by idx desc) rn, member.* from member)
		 where rn between #{start} and #{end}
	</select>
	
	<!-- 유저아이디로 찾기 -->
	<select id="findUserByUserid" resultType="User" parameterType="string">
		select * from member where userid=#{userid}
	</select>
	<!-- 아이디체크(회원가입) -->
	<select id="idCheck" resultType="int" parameterType="string">
		select count(idx) from member where userid=#{userid}
	</select>
	<select id="selectByCategory"></select>
	
	<!-- 마일리지 차감/적립 -->
	<update id="updateMileageDown" parameterType="Order">
		update member set mileage= mileage-#{opointuse} where idx=#{idx_fk}
	</update>
	<update id="updateMileageUp" parameterType="Order">
		update member set mileage= mileage+#{ototalPoint} where idx=#{idx_fk}
	</update>
	
</mapper>