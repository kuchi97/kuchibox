package k20191104;

/*
OOP 4대특징
	- 추상화
	- 캡슐화=은닉화
	- 상속성
	- 다형성
*/

/*
- 집, 중개인, 매도자, 매수자... =객체(Object) --(인스턴스화)--> object(instance)
- 추상화 ==> 클래스로 구현하는것
	1. 속성(명사형) ==> 멤버변수로 구현
	2. 행동양식(동사형) ==> 메소드로 구현

*/
//한페이지 내에 여러개의 클래스 구현가능
//단 public 속성은 한 클래스에만 부여가능
//주로 파일명과 동일한 클래스나 main()을 가진쪽에 부여

//'has a' 관계가 성립해야한다
// ex) [house] has a [room]  관계가 성립해야한다
//		house has an engine (x)
public class OOP {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println("이 클래스는 객체지향프로그래밍에 대한 설명을 담은 페이지입니다");

	}

}
